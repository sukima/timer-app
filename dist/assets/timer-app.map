{"version":3,"sources":["vendor/ember-cli/app-prefix.js","timer-app/app.js","timer-app/components/context-menu.js","timer-app/components/main-nav.js","timer-app/components/time-picker.js","timer-app/components/timer-display.js","timer-app/components/top-bar.js","timer-app/controllers/about.js","timer-app/controllers/application.js","timer-app/controllers/index.js","timer-app/controllers/settings.js","timer-app/helpers/app-version.js","timer-app/helpers/cancel-all.js","timer-app/helpers/perform.js","timer-app/helpers/pluralize.js","timer-app/helpers/singularize.js","timer-app/helpers/task.js","timer-app/initializers/app-version.js","timer-app/initializers/container-debug-adapter.js","timer-app/initializers/data-adapter.js","timer-app/initializers/ember-concurrency.js","timer-app/initializers/ember-data.js","timer-app/initializers/ember-keyboard-first-responder-inputs.js","timer-app/initializers/export-application-global.js","timer-app/initializers/injectStore.js","timer-app/initializers/store.js","timer-app/initializers/transforms.js","timer-app/instance-initializers/ember-data.js","timer-app/mixins/timer-class.js","timer-app/resolver.js","timer-app/router.js","timer-app/routes/index.js","timer-app/services/ajax.js","timer-app/services/keyboard.js","timer-app/services/timer.js","timer-app/templates/about.js","timer-app/templates/application.js","timer-app/templates/components/context-menu.js","timer-app/templates/components/main-nav.js","timer-app/templates/components/time-picker.js","timer-app/templates/components/timer-display.js","timer-app/templates/components/top-bar.js","timer-app/templates/index.js","timer-app/templates/settings.js","timer-app/utils/get-cmd-key.js","timer-app/utils/listener-name.js","timer-app/utils/parse-time.js","timer-app/utils/timer-states.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('timer-app/app', ['exports', 'timer-app/resolver', 'ember-load-initializers', 'timer-app/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define('timer-app/components/context-menu', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    classNames: ['context-menu'],\n\n    open: false,\n\n    actions: {\n      toggleMenu: function toggleMenu() {\n        this.toggleProperty('open');\n      }\n    }\n  });\n});","define('timer-app/components/main-nav', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    timer: Ember.inject.service(),\n\n    tagName: 'nav',\n    classNames: ['main-nav'],\n\n    minSeconds: Ember.computed.reads('timer.minSeconds'),\n    avgSeconds: Ember.computed.reads('timer.avgSeconds'),\n    maxSeconds: Ember.computed.reads('timer.maxSeconds'),\n    isPaused: Ember.computed.reads('timer.isPaused'),\n\n    actions: {\n      resume: function resume() {\n        this.get('timer').resume();\n      },\n      pause: function pause() {\n        this.get('timer').pause();\n      },\n      restart: function restart() {\n        this.get('timer').restart();\n      }\n    }\n  });\n});","define('timer-app/components/time-picker', ['exports', 'timer-app/utils/parse-time'], function (exports, _parseTime13) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  exports.default = Ember.Component.extend({\n    classNames: ['time-picker'],\n\n    showAutoButton: true,\n\n    hours: Ember.computed('time', {\n      get: function get() {\n        var time = this.get('time') || '';\n\n        var _parseTime = (0, _parseTime13.parseTime)(time),\n            _parseTime2 = _slicedToArray(_parseTime, 1),\n            hours = _parseTime2[0];\n\n        return hours;\n      },\n      set: function set(key, value) {\n        var _parseTime3 = (0, _parseTime13.parseTime)(this.get('time')),\n            _parseTime4 = _slicedToArray(_parseTime3, 3),\n            minutes = _parseTime4[1],\n            seconds = _parseTime4[2];\n\n        var hours = parseInt(value, 10);\n        this.set('time', (0, _parseTime13.joinTimeParts)(hours, minutes, seconds));\n        return value;\n      }\n    }),\n\n    minutes: Ember.computed('time', {\n      get: function get() {\n        var time = this.get('time') || '';\n\n        var _parseTime5 = (0, _parseTime13.parseTime)(time),\n            _parseTime6 = _slicedToArray(_parseTime5, 2),\n            minutes = _parseTime6[1];\n\n        return minutes;\n      },\n      set: function set(key, value) {\n        var _parseTime7 = (0, _parseTime13.parseTime)(this.get('time')),\n            _parseTime8 = _slicedToArray(_parseTime7, 3),\n            hours = _parseTime8[0],\n            seconds = _parseTime8[2];\n\n        var minutes = parseInt(value, 10);\n        this.set('time', (0, _parseTime13.joinTimeParts)(hours, minutes, seconds));\n        return value;\n      }\n    }),\n\n    seconds: Ember.computed('time', {\n      get: function get() {\n        var time = this.get('time') || '0';\n\n        var _parseTime9 = (0, _parseTime13.parseTime)(time),\n            _parseTime10 = _slicedToArray(_parseTime9, 3),\n            seconds = _parseTime10[2];\n\n        return seconds;\n      },\n      set: function set(key, value) {\n        var _parseTime11 = (0, _parseTime13.parseTime)(this.get('time')),\n            _parseTime12 = _slicedToArray(_parseTime11, 2),\n            hours = _parseTime12[0],\n            minutes = _parseTime12[1];\n\n        var seconds = parseInt(value, 10);\n        this.set('time', (0, _parseTime13.joinTimeParts)(hours, minutes, seconds));\n        return value;\n      }\n    })\n  });\n});","define('timer-app/components/timer-display', ['exports', 'timer-app/utils/parse-time'], function (exports, _parseTime) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var floor = Math.floor;\n  exports.default = Ember.Component.extend({\n    tagName: 'span',\n    classNames: ['timer-display'],\n\n    displayTime: Ember.computed('seconds', {\n      get: function get() {\n        var seconds = this.get('seconds') || 0;\n        var minutes = floor(seconds / 60);\n        var hours = floor(minutes / 60);\n        seconds -= minutes * 60;\n        minutes -= hours * 60;\n        var time = (0, _parseTime.joinTimeParts)(hours, minutes, seconds);\n        return time === 'auto' ? '00:00' : time;\n      }\n    })\n  });\n});","define('timer-app/components/top-bar', ['exports', 'timer-app/mixins/timer-class'], function (exports, _timerClass) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend(_timerClass.default, {\n    timer: Ember.inject.service(),\n\n    classNames: ['top-bar'],\n    classNameBindings: ['timerClasses'],\n\n    seconds: Ember.computed.reads('timer.seconds'),\n    isPaused: Ember.computed.reads('timer.isPaused')\n  });\n});","define('timer-app/controllers/about', ['exports', 'timer-app/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    timer: Ember.inject.service(),\n\n    sourceUrl: _environment.default.APP.sourceUrl,\n    attributions: _environment.default.APP.attributions,\n\n    minSeconds: Ember.computed.reads('timer.minSeconds'),\n    avgSeconds: Ember.computed.reads('timer.avgSeconds'),\n    maxSeconds: Ember.computed.reads('timer.maxSeconds')\n  });\n});","define('timer-app/controllers/application', ['exports', 'timer-app/mixins/timer-class'], function (exports, _timerClass) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend(_timerClass.default, {\n    timer: Ember.inject.service(),\n    queryParams: ['min', 'avg', 'max'],\n\n    min: Ember.computed.alias('timer.minTime'),\n    avg: Ember.computed.alias('timer.avgTime'),\n    max: Ember.computed.alias('timer.maxTime')\n  });\n});","define('timer-app/controllers/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    timer: Ember.inject.service(),\n\n    isPaused: Ember.computed.reads('timer.isPaused'),\n    seconds: Ember.computed.reads('timer.seconds'),\n\n    actions: {\n      restart: function restart() {\n        this.get('timer').restart();\n      },\n      pause: function pause() {\n        this.get('timer').pause();\n      },\n      resume: function resume() {\n        this.get('timer').resume();\n      },\n      toggleTimer: function toggleTimer() {\n        if (this.get('isPaused')) {\n          this.send('resume');\n        } else {\n          this.send('pause');\n        }\n      },\n      resetAndPause: function resetAndPause() {\n        this.send('restart');\n        this.send('pause');\n      }\n    }\n  });\n});","define('timer-app/controllers/settings', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    timer: Ember.inject.service(),\n\n    minTime: Ember.computed.alias('timer.minTime'),\n    avgTime: Ember.computed.alias('timer.avgTime'),\n    maxTime: Ember.computed.alias('timer.maxTime'),\n\n    minSeconds: Ember.computed.reads('timer.minSeconds'),\n    avgSeconds: Ember.computed.reads('timer.avgSeconds'),\n    maxSeconds: Ember.computed.reads('timer.maxSeconds')\n  });\n});","define('timer-app/helpers/app-version', ['exports', 'timer-app/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  function appVersion(_) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var version = _environment.default.APP.version;\n    // e.g. 1.0.0-alpha.1+4jds75hf\n\n    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n    var versionOnly = hash.versionOnly || hash.hideSha;\n    var shaOnly = hash.shaOnly || hash.hideVersion;\n\n    var match = null;\n\n    if (versionOnly) {\n      if (hash.showExtended) {\n        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1\n      }\n      // Fallback to just version\n      if (!match) {\n        match = version.match(_regexp.versionRegExp); // 1.0.0\n      }\n    }\n\n    if (shaOnly) {\n      match = version.match(_regexp.shaRegExp); // 4jds75hf\n    }\n\n    return match ? match[0] : version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('timer-app/helpers/cancel-all', ['exports', 'ember-concurrency/helpers/cancel-all'], function (exports, _cancelAll) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _cancelAll.default;\n    }\n  });\n  Object.defineProperty(exports, 'cancelAll', {\n    enumerable: true,\n    get: function () {\n      return _cancelAll.cancelAll;\n    }\n  });\n});","define('timer-app/helpers/perform', ['exports', 'ember-concurrency/helpers/perform'], function (exports, _perform) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _perform.default;\n    }\n  });\n  Object.defineProperty(exports, 'perform', {\n    enumerable: true,\n    get: function () {\n      return _perform.perform;\n    }\n  });\n});","define('timer-app/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _pluralize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pluralize.default;\n});","define('timer-app/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _singularize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _singularize.default;\n});","define('timer-app/helpers/task', ['exports', 'ember-concurrency/helpers/task'], function (exports, _task) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _task.default;\n    }\n  });\n  Object.defineProperty(exports, 'task', {\n    enumerable: true,\n    get: function () {\n      return _task.task;\n    }\n  });\n});","define('timer-app/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'timer-app/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var name = void 0,\n      version = void 0;\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('timer-app/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('timer-app/initializers/data-adapter', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('timer-app/initializers/ember-concurrency', ['exports', 'ember-concurrency/initializers/ember-concurrency'], function (exports, _emberConcurrency) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _emberConcurrency.default;\n    }\n  });\n  Object.defineProperty(exports, 'initialize', {\n    enumerable: true,\n    get: function () {\n      return _emberConcurrency.initialize;\n    }\n  });\n});","define('timer-app/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data'], function (exports, _setupContainer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-data',\n    initialize: _setupContainer.default\n  };\n});","define('timer-app/initializers/ember-keyboard-first-responder-inputs', ['exports', 'ember-keyboard/initializers/ember-keyboard-first-responder-inputs'], function (exports, _emberKeyboardFirstResponderInputs) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _emberKeyboardFirstResponderInputs.default;\n    }\n  });\n  Object.defineProperty(exports, 'initialize', {\n    enumerable: true,\n    get: function () {\n      return _emberKeyboardFirstResponderInputs.initialize;\n    }\n  });\n});","define('timer-app/initializers/export-application-global', ['exports', 'timer-app/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('timer-app/initializers/injectStore', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define('timer-app/initializers/store', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: function initialize() {}\n  };\n});","define('timer-app/initializers/transforms', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'transforms',\n    before: 'store',\n    initialize: function initialize() {}\n  };\n});","define(\"timer-app/instance-initializers/ember-data\", [\"exports\", \"ember-data/initialize-store-service\"], function (exports, _initializeStoreService) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: \"ember-data\",\n    initialize: _initializeStoreService.default\n  };\n});","define('timer-app/mixins/timer-class', ['exports', 'timer-app/utils/timer-states'], function (exports, _timerStates) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _CONTAINER_STATE_CLAS;\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var CONTAINER_STATE_CLASSES = (_CONTAINER_STATE_CLAS = {}, _defineProperty(_CONTAINER_STATE_CLAS, _timerStates.default.DEFAULT, '--default-time'), _defineProperty(_CONTAINER_STATE_CLAS, _timerStates.default.MINIMUM, '--min-time'), _defineProperty(_CONTAINER_STATE_CLAS, _timerStates.default.AVERAGE, '--avg-time'), _defineProperty(_CONTAINER_STATE_CLAS, _timerStates.default.MAXIMUM, '--max-time'), _defineProperty(_CONTAINER_STATE_CLAS, _timerStates.default.DISQUALIFIED, '--disqualified-time'), _CONTAINER_STATE_CLAS);\n\n  exports.default = Ember.Mixin.create({\n    timer: Ember.inject.service(),\n\n    state: Ember.computed.reads('timer.state'),\n    isPaused: Ember.computed.reads('timer.isPaused'),\n\n    timerClasses: Ember.computed('{state,isPaused}', {\n      get: function get() {\n        var state = this.get('state');\n        var classNames = [CONTAINER_STATE_CLASSES[state]];\n        if (this.get('isPaused')) {\n          classNames.push('--paused');\n        }\n        return classNames.join(' ');\n      }\n    })\n  });\n});","define('timer-app/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('timer-app/router', ['exports', 'timer-app/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n    this.route('about');\n    this.route('settings');\n  });\n\n  exports.default = Router;\n});","define('timer-app/routes/index', ['exports', 'ember-keyboard'], function (exports, _emberKeyboard) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend(_emberKeyboard.EKMixin, {\n    timer: Ember.inject.service(),\n\n    activate: function activate() {\n      this._super.apply(this, arguments);\n      this.set('keyboardActivated', true);\n    },\n    deactivate: function deactivate() {\n      this._super.apply(this, arguments);\n      this.set('keyboardActivated', false);\n    },\n\n\n    toggleTimer: Ember.on((0, _emberKeyboard.keyUp)('Space'), function () {\n      var timer = this.get('timer');\n      if (timer.get('isPaused')) {\n        timer.resume();\n      } else {\n        timer.pause();\n      }\n    }),\n\n    resetTimer: Ember.on((0, _emberKeyboard.keyUp)('KeyR'), function () {\n      this.get('timer').reset();\n    }),\n\n    showHelp: Ember.on((0, _emberKeyboard.keyUp)('KeyH'), (0, _emberKeyboard.keyUp)('shift+Slash'), function () {\n      this.transitionTo('about');\n    }),\n\n    showSettings: Ember.on((0, _emberKeyboard.keyUp)('KeyS'), function () {\n      this.transitionTo('settings');\n    })\n  });\n});","define('timer-app/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define('timer-app/services/keyboard', ['exports', 'ember-keyboard/services/keyboard'], function (exports, _keyboard) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _keyboard.default;\n    }\n  });\n});","define('timer-app/services/timer', ['exports', 'ember-concurrency', 'timer-app/utils/parse-time', 'timer-app/utils/timer-states'], function (exports, _emberConcurrency, _parseTime, _timerStates) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var floor = Math.floor;\n\n\n  var ONE_MINUTE = 60; // Seconds\n  var TWO_MINUTES = 120; // Seconds\n  var FIVE_MINUTES = 300; // Seconds\n  var DISQUALIFICATION_OFFSET = 30; // Seconds\n\n  exports.default = Ember.Service.extend({\n    minTime: 'auto',\n    avgTime: 'auto',\n    maxTime: '07:00',\n    _clockTime: 0,\n\n    isPaused: Ember.computed.reads('clock.isIdle'),\n\n    maxSeconds: Ember.computed('maxTime', {\n      get: function get() {\n        return (0, _parseTime.parseSeconds)(this.get('maxTime')) || FIVE_MINUTES;\n      }\n    }),\n\n    minSeconds: Ember.computed('{minTime,maxSeconds}', {\n      get: function get() {\n        var minTime = this.get('minTime');\n        var maxSeconds = this.get('maxSeconds');\n        var minSeconds = (0, _parseTime.parseSeconds)(minTime);\n        var isManual = minTime !== 'auto' && minSeconds < maxSeconds;\n        if (isManual) {\n          return minSeconds;\n        }\n        if (maxSeconds > FIVE_MINUTES) {\n          return maxSeconds - TWO_MINUTES;\n        }\n        if (maxSeconds > TWO_MINUTES) {\n          return maxSeconds - ONE_MINUTE;\n        }\n        if (maxSeconds > ONE_MINUTE) {\n          return maxSeconds - 30;\n        }\n        return 0;\n      }\n    }),\n\n    avgSeconds: Ember.computed('{avgTime,minSeconds,maxSeconds}', {\n      get: function get() {\n        var avgTime = this.get('avgTime');\n        var minSeconds = this.get('minSeconds');\n        var maxSeconds = this.get('maxSeconds');\n        var avgSeconds = (0, _parseTime.parseSeconds)(avgTime);\n        var isManual = avgTime !== 'auto' && avgSeconds > minSeconds && avgSeconds < maxSeconds;\n        if (isManual) {\n          return avgSeconds;\n        }\n        var duration = maxSeconds - minSeconds;\n        return floor(duration / 2) + minSeconds;\n      }\n    }),\n\n    state: Ember.computed('{seconds,minSeconds,avgSeconds,maxSeconds}', {\n      get: function get() {\n        var seconds = this.get('seconds');\n        var minSeconds = this.get('minSeconds');\n        var avgSeconds = this.get('avgSeconds');\n        var maxSeconds = this.get('maxSeconds');\n        var disqualifiedSeconds = maxSeconds + DISQUALIFICATION_OFFSET;\n        if (seconds >= disqualifiedSeconds) {\n          return _timerStates.default.DISQUALIFIED;\n        }\n        if (seconds >= maxSeconds) {\n          return _timerStates.default.MAXIMUM;\n        }\n        if (seconds >= avgSeconds) {\n          return _timerStates.default.AVERAGE;\n        }\n        if (seconds >= minSeconds) {\n          return _timerStates.default.MINIMUM;\n        }\n        return _timerStates.default.DEFAULT;\n      }\n    }),\n\n    seconds: Ember.computed('_clockTime', {\n      get: function get() {\n        return floor(this.get('_clockTime') / 1000);\n      }\n    }),\n\n    clock: (0, _emberConcurrency.task)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var initialTime, sTime, cTime, clockTime;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              initialTime = this.get('_clockTime');\n              sTime = new Date().getTime();\n\n            case 2:\n              if (!true) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 5;\n              return (0, _emberConcurrency.timeout)(500);\n\n            case 5:\n              cTime = new Date().getTime();\n              clockTime = cTime - sTime + initialTime;\n\n              this.set('_clockTime', clockTime);\n              _context.next = 2;\n              break;\n\n            case 10:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    })).restartable(),\n\n    reset: function reset() {\n      this.get('clock').cancelAll();\n      this.set('_clockTime', 0);\n    },\n    restart: function restart() {\n      this.set('_clockTime', 0);\n      this.resume();\n    },\n    pause: function pause() {\n      this.get('clock').cancelAll();\n    },\n    resume: function resume() {\n      this.get('clock').perform();\n    }\n  });\n});","define(\"timer-app/templates/about\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"lMxtRM4C\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"top-bar\\\"],false],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"content\\\"],[7],[0,\\\"\\\\n  \\\"],[4,\\\"link-to\\\",[\\\"index\\\"],[[\\\"tagName\\\",\\\"class\\\",\\\"title\\\"],[\\\"button\\\",\\\"close-button\\\",\\\"close\\\"]],{\\\"statements\\\":[[0,\\\"×\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"h2\\\"],[7],[0,\\\"Just A Timer\\\"],[6,\\\"sup\\\"],[9,\\\"class\\\",\\\"small\\\"],[7],[0,\\\"™\\\"],[8],[8],[0,\\\"\\\\n  \\\"],[6,\\\"dl\\\"],[9,\\\"class\\\",\\\"info-list\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"dt\\\"],[7],[0,\\\"Version\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dd\\\"],[7],[6,\\\"code\\\"],[7],[1,[25,\\\"app-version\\\",null,[[\\\"versionOnly\\\"],[true]]],false],[8],[0,\\\" (\\\"],[6,\\\"code\\\"],[7],[1,[25,\\\"app-version\\\",null,[[\\\"shaOnly\\\"],[true]]],false],[8],[0,\\\")\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dt\\\"],[7],[0,\\\"Source\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dd\\\"],[7],[6,\\\"a\\\"],[10,\\\"href\\\",[18,\\\"sourceUrl\\\"],null],[7],[1,[18,\\\"sourceUrl\\\"],false],[8],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"A simple yet useful speech or talk timer that follows the \\\"],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"https://www.toastmasters.org/\\\"],[7],[0,\\\"Toastmasters\\\"],[8],[0,\\\" recommended timer notifications.\\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"h3\\\"],[7],[0,\\\"Instructions\\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"The timer will continue to count up. It has three settings that determine when the background color of the timer will change.\\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"dl\\\"],[9,\\\"class\\\",\\\"info-list\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"dt\\\"],[7],[0,\\\"Minimum\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dd\\\"],[7],[0,\\\"The time to reach to meet the minimum speech length. Currently set to \\\"],[1,[25,\\\"timer-display\\\",null,[[\\\"seconds\\\"],[[20,[\\\"minSeconds\\\"]]]]],false],[0,\\\" (green)\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dt\\\"],[7],[0,\\\"Average\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dd\\\"],[7],[0,\\\"The time that marks the average speech length. Currently set to \\\"],[1,[25,\\\"timer-display\\\",null,[[\\\"seconds\\\"],[[20,[\\\"avgSeconds\\\"]]]]],false],[0,\\\" (yellow)\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dt\\\"],[7],[0,\\\"Maximum\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dd\\\"],[7],[0,\\\"The time that marks when a speech has run over. Currently set to \\\"],[1,[25,\\\"timer-display\\\",null,[[\\\"seconds\\\"],[[20,[\\\"maxSeconds\\\"]]]]],false],[0,\\\" (red)\\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"Clicking on the \\\"],[4,\\\"link-to\\\",[\\\"index\\\"],null,{\\\"statements\\\":[[0,\\\"Timer\\\"]],\\\"parameters\\\":[]},null],[0,\\\" page will pause/resume the timer. Use the \\\"],[4,\\\"link-to\\\",[\\\"settings\\\"],null,{\\\"statements\\\":[[0,\\\"Settings\\\"]],\\\"parameters\\\":[]},null],[0,\\\" page to change the values above. The values are saved to the URL so your favorite timings can be bookmarked.\\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"h3\\\"],[7],[0,\\\"Keyboard Shortcuts\\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"p\\\"],[7],[0,\\\"These keyboard shortcuts are available on the main \\\"],[4,\\\"link-to\\\",[\\\"index\\\"],null,{\\\"statements\\\":[[0,\\\"Timer\\\"]],\\\"parameters\\\":[]},null],[0,\\\" page.\\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"dl\\\"],[9,\\\"class\\\",\\\"info-list\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"dt\\\"],[7],[6,\\\"kbd\\\"],[7],[0,\\\"Space\\\"],[8],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dd\\\"],[7],[0,\\\"Pause/Resume timer\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dt\\\"],[7],[6,\\\"kbd\\\"],[7],[0,\\\"R\\\"],[8],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dd\\\"],[7],[0,\\\"Reset the timer\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dt\\\"],[7],[6,\\\"kbd\\\"],[7],[0,\\\"S\\\"],[8],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dd\\\"],[7],[0,\\\"Open the \\\"],[4,\\\"link-to\\\",[\\\"settings\\\"],null,{\\\"statements\\\":[[0,\\\"Settings\\\"]],\\\"parameters\\\":[]},null],[0,\\\" page\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dt\\\"],[7],[6,\\\"kbd\\\"],[7],[0,\\\"H\\\"],[8],[0,\\\" or \\\"],[6,\\\"kbd\\\"],[7],[0,\\\"?\\\"],[8],[8],[0,\\\"\\\\n    \\\"],[6,\\\"dd\\\"],[7],[0,\\\"Open this page\\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"timer-app/templates/about.hbs\" } });\n});","define(\"timer-app/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"dHyL7U2B\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"div\\\"],[10,\\\"class\\\",[26,[\\\"container \\\",[18,\\\"timerClasses\\\"]]]],[7],[0,\\\"\\\\n  \\\"],[1,[18,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"],[8]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"timer-app/templates/application.hbs\" } });\n});","define(\"timer-app/templates/components/context-menu\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"AIV6V4Fv\", \"block\": \"{\\\"symbols\\\":[\\\"&default\\\"],\\\"statements\\\":[[6,\\\"button\\\"],[9,\\\"class\\\",\\\"context-menu__toggle-button\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"toggleMenu\\\"]],[7],[0,\\\"\\\\n  ☰ \\\"],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"div\\\"],[10,\\\"class\\\",[26,[\\\"context-menu__dropdown \\\",[25,\\\"if\\\",[[20,[\\\"open\\\"]],\\\"context-menu--open\\\"],null]]]],[7],[0,\\\"\\\\n  \\\"],[11,1],[0,\\\"\\\\n\\\"],[8]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"timer-app/templates/components/context-menu.hbs\" } });\n});","define(\"timer-app/templates/components/main-nav\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"d7slgPwu\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"ul\\\"],[9,\\\"class\\\",\\\"nav-list\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"item\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[20,[\\\"isPaused\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"button\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"resume\\\"]],[7],[0,\\\"Resume\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"button\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"pause\\\"]],[7],[0,\\\"Pause\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"item\\\"],[7],[6,\\\"button\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"restart\\\"]],[7],[0,\\\"Restart\\\"],[8],[8],[0,\\\"\\\\n  \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"item\\\"],[7],[4,\\\"link-to\\\",[\\\"index\\\"],null,{\\\"statements\\\":[[0,\\\"Timer\\\"]],\\\"parameters\\\":[]},null],[8],[0,\\\"\\\\n  \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"item\\\"],[7],[4,\\\"link-to\\\",[\\\"settings\\\"],null,{\\\"statements\\\":[[0,\\\"Settings\\\"]],\\\"parameters\\\":[]},null],[8],[0,\\\"\\\\n  \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"item\\\"],[7],[4,\\\"link-to\\\",[\\\"about\\\"],null,{\\\"statements\\\":[[0,\\\"About\\\"]],\\\"parameters\\\":[]},null],[8],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[20,[\\\"showDetails\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"item\\\"],[7],[0,\\\"Min: \\\"],[1,[25,\\\"timer-display\\\",null,[[\\\"seconds\\\"],[[20,[\\\"minSeconds\\\"]]]]],false],[8],[0,\\\"\\\\n    \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"item\\\"],[7],[0,\\\"Avg: \\\"],[1,[25,\\\"timer-display\\\",null,[[\\\"seconds\\\"],[[20,[\\\"avgSeconds\\\"]]]]],false],[8],[0,\\\"\\\\n    \\\"],[6,\\\"li\\\"],[9,\\\"class\\\",\\\"item\\\"],[7],[0,\\\"Max: \\\"],[1,[25,\\\"timer-display\\\",null,[[\\\"seconds\\\"],[[20,[\\\"maxSeconds\\\"]]]]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[8]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"timer-app/templates/components/main-nav.hbs\" } });\n});","define(\"timer-app/templates/components/time-picker\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"NgHUALof\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"input\\\",null,[[\\\"type\\\",\\\"title\\\",\\\"max\\\",\\\"min\\\",\\\"value\\\"],[\\\"number\\\",\\\"hours\\\",99,0,[20,[\\\"hours\\\"]]]]],false],[0,\\\"\\\\n:\\\\n\\\"],[1,[25,\\\"input\\\",null,[[\\\"type\\\",\\\"title\\\",\\\"max\\\",\\\"min\\\",\\\"value\\\"],[\\\"number\\\",\\\"minutes\\\",60,0,[20,[\\\"minutes\\\"]]]]],false],[0,\\\"\\\\n:\\\\n\\\"],[1,[25,\\\"input\\\",null,[[\\\"type\\\",\\\"title\\\",\\\"max\\\",\\\"min\\\",\\\"value\\\"],[\\\"number\\\",\\\"seconds\\\",60,0,[20,[\\\"seconds\\\"]]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[20,[\\\"showAutoButton\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[6,\\\"button\\\"],[3,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[20,[\\\"time\\\"]]],null],\\\"auto\\\"]],[7],[0,\\\"Auto\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"timer-app/templates/components/time-picker.hbs\" } });\n});","define(\"timer-app/templates/components/timer-display\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ts2ODSpY\", \"block\": \"{\\\"symbols\\\":[\\\"&default\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[22,1]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[11,1,[[20,[\\\"displayTime\\\"]]]],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"  \\\"],[1,[18,\\\"displayTime\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"timer-app/templates/components/timer-display.hbs\" } });\n});","define(\"timer-app/templates/components/top-bar\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"MDGDxYXa\", \"block\": \"{\\\"symbols\\\":[\\\"displayTime\\\"],\\\"statements\\\":[[4,\\\"timer-display\\\",null,[[\\\"class\\\",\\\"seconds\\\"],[\\\"header-timer\\\",[20,[\\\"seconds\\\"]]]],{\\\"statements\\\":[[0,\\\"  \\\"],[1,[19,1,[]],false],[0,\\\" \\\"],[1,[25,\\\"if\\\",[[20,[\\\"isPaused\\\"]],\\\"(paused)\\\"],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[1,[18,\\\"main-nav\\\"],false]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"timer-app/templates/components/top-bar.hbs\" } });\n});","define(\"timer-app/templates/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"668AE4O0\", \"block\": \"{\\\"symbols\\\":[\\\"displayTime\\\"],\\\"statements\\\":[[4,\\\"context-menu\\\",null,null,{\\\"statements\\\":[[0,\\\"  \\\"],[1,[25,\\\"main-nav\\\",null,[[\\\"showDetails\\\"],[true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"main-timer\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"resetAndPause\\\"],[[\\\"on\\\"],[\\\"doubleClick\\\"]]],[3,\\\"action\\\",[[19,0,[]],\\\"toggleTimer\\\"],[[\\\"on\\\"],[\\\"click\\\"]]],[7],[0,\\\"\\\\n\\\"],[4,\\\"timer-display\\\",null,[[\\\"class\\\",\\\"seconds\\\"],[\\\"jumbo\\\",[20,[\\\"seconds\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[19,1,[]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"timer-app/templates/index.hbs\" } });\n});","define(\"timer-app/templates/settings\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"yaQxEcIc\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"top-bar\\\"],false],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"form\\\"],[9,\\\"class\\\",\\\"content settings-form\\\"],[7],[0,\\\"\\\\n  \\\"],[4,\\\"link-to\\\",[\\\"index\\\"],[[\\\"tagName\\\",\\\"class\\\",\\\"title\\\"],[\\\"button\\\",\\\"close-button\\\",\\\"close\\\"]],{\\\"statements\\\":[[0,\\\"×\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"description\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"em\\\"],[7],[0,\\\"Tip:\\\"],[8],[0,\\\" After adjusting the times bookmark this URL to save the times for next future uses.\\\\n  (\\\"],[4,\\\"link-to\\\",[[25,\\\"query-params\\\",null,[[\\\"min\\\",\\\"avg\\\",\\\"max\\\"],[\\\"5:00\\\",\\\"8:00\\\",\\\"10:00\\\"]]]],null,{\\\"statements\\\":[[0,\\\"example\\\"]],\\\"parameters\\\":[]},null],[0,\\\")\\\\n  \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"fieldset\\\"],[9,\\\"class\\\",\\\"--max-time\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"label\\\"],[7],[0,\\\"Maximum time \\\"],[1,[25,\\\"timer-display\\\",null,[[\\\"seconds\\\"],[[20,[\\\"maxSeconds\\\"]]]]],false],[8],[0,\\\"\\\\n    \\\"],[1,[25,\\\"time-picker\\\",null,[[\\\"showAutoButton\\\",\\\"time\\\"],[false,[20,[\\\"maxTime\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"description\\\"],[7],[0,\\\"Speech has run over time (red).\\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"fieldset\\\"],[9,\\\"class\\\",\\\"--avg-time\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"label\\\"],[7],[0,\\\"Average time \\\"],[1,[25,\\\"timer-display\\\",null,[[\\\"seconds\\\"],[[20,[\\\"avgSeconds\\\"]]]]],false],[8],[0,\\\"\\\\n    \\\"],[1,[25,\\\"time-picker\\\",null,[[\\\"time\\\"],[[20,[\\\"avgTime\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"description\\\"],[7],[0,\\\"Speech is near going over time (yellow).\\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"fieldset\\\"],[9,\\\"class\\\",\\\"--min-time\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"label\\\"],[7],[0,\\\"Minimum time \\\"],[1,[25,\\\"timer-display\\\",null,[[\\\"seconds\\\"],[[20,[\\\"minSeconds\\\"]]]]],false],[8],[0,\\\"\\\\n    \\\"],[1,[25,\\\"time-picker\\\",null,[[\\\"time\\\"],[[20,[\\\"minTime\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"description\\\"],[7],[0,\\\"Speech has reached the time to qualify (green).\\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"timer-app/templates/settings.hbs\" } });\n});","define('timer-app/utils/get-cmd-key', ['exports', 'ember-keyboard/utils/get-cmd-key'], function (exports, _getCmdKey) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _getCmdKey.default;\n    }\n  });\n});","define('timer-app/utils/listener-name', ['exports', 'ember-keyboard/utils/listener-name'], function (exports, _listenerName) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _listenerName.default;\n    }\n  });\n});","define('timer-app/utils/parse-time', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.padNumber = padNumber;\n  exports.parseTime = parseTime;\n  exports.parseSeconds = parseSeconds;\n  exports.joinTimeParts = joinTimeParts;\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  function padNumber(num) {\n    return ('0' + num).substr(-2);\n  }\n\n  function parseTime(time) {\n    var parts = time.split(':');\n    for (; parts.length < 3; parts.unshift('0')) {}\n    return parts.map(function (n) {\n      return parseInt(n, 10) || 0;\n    });\n  }\n\n  function parseSeconds(time) {\n    var _parseTime = parseTime(time),\n        _parseTime2 = _slicedToArray(_parseTime, 3),\n        hours = _parseTime2[0],\n        minutes = _parseTime2[1],\n        seconds = _parseTime2[2];\n\n    return hours * 60 * 60 + minutes * 60 + seconds;\n  }\n\n  function joinTimeParts(hours, minutes, seconds) {\n    if (hours + minutes + seconds <= 0) {\n      return 'auto';\n    }\n    hours = hours > 0 ? hours : null;\n    return [hours, minutes, seconds].compact().map(padNumber).join(':');\n  }\n});","define('timer-app/utils/timer-states', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    DEFAULT: 'default',\n    MINIMUM: 'minimum',\n    AVERAGE: 'average',\n    MAXIMUM: 'maximum',\n    DISQUALIFIED: 'disqualified'\n  };\n});","\n","define('timer-app/config/environment', [], function() {\n  var prefix = 'timer-app';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"timer-app/app\")[\"default\"].create({\"sourceUrl\":\"https://github.com/sukima/timer-app\",\"name\":\"timer-app\",\"version\":\"1.1.0+1091f110\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvjBA;AACA;AACA;","file":"timer-app.js"}